name: build and push
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set repository name variable
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV

      - name: Update version in server
        id: update_version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            RESPONSE=$(curl -X GET http://localhost:9988/service/${{ env.REPO_NAME }})
            echo "RESPONSE=${RESPONSE}" >> $GITHUB_ENV
            MESSAGE=$(echo "${{ env.RESPONSE }}" | jq -r '.message')
            echo "MESSAGE=${MESSAGE}" >> $GITHUB_ENV
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "${{ secrets.TELEGRAM_TO }}",
              "text": "${{ env.MESSAGE }}",
              "parse_mode": "HTML"
            }'
          # curl -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage
          # script: curl -X GET http://localhost:9988/service/${{ env.REPO_NAME }}
      # - name: Send message to Telegram
      #   run: |
      #     curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
      #     -H "Content-Type: application/json" \
      #     -d '{
      #       "chat_id": "${{ secrets.TELEGRAM_TO }}",
      #       "text": "'"${{ env.MESSAGE }}"'",
      #       "parse_mode": "HTML"
      #     }'
        
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ steps.update_version.outputs.message }}
